#!/bin/bash

#./scriptDatasets ../dataset ../Tools ./output_dataset ../Tools ./out_data

dataset_directory=$1;
tools_directory=$2;
output_directory=$3;
optimal_directory=$4;
output_dirStdERROUT=$5;


dataset_array=("10seqsVar.fa" "7seqsVar.fa" "8seq.fasta")

#dataset_array=("SRR12038588.fasta")

#dataset_array=("SRR065390_1.fasta" "SRR12038588.fasta")

#dataset_array=("ERR7320.fasta" "SRR12038540.fasta"  "SRR059298.fasta" "ERR022075_1.fasta" "C_elegans_200x.fasta" "SRR2990914_1.fasta" "ERR1019034.fasta")


echo -e "inputBWT\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_original.txt
echo -e "rloBWT\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_RLO.txt
echo -e "BEETL\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_BEETL.txt
echo -e "altBWT\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_inverse.txt
echo -e "plusBWT\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_plus.txt
echo -e "altBWT\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_random.txt
echo -e "SAP-ARRAY\ndataset,%CPU,WALL_CLOCK,RAM" &> ${output_directory}/table_SAP-ARRAY.txt
echo -e "optBWT\ndataset,%CPU,WALL_CLOCK,RAM,runs" &> ${output_directory}/table_optimal.txt
echo -e "SAP_INTERVAL\ndataset,sap_interval,sap_interval_type_two,sum_length_saps,sum_diff_char,number_run_sap" &> ${output_directory}/table_temp.txt

for dataset in ${dataset_array[@]}; do

  echo $dataset
  
  echo "  Build inputBWT"

  (/usr/bin/time -v ./BCR_inputBWT ${dataset_directory}/${dataset} ${output_directory}/${dataset}.out) &> ${output_directory}/data_${dataset}.txt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt >> ${output_directory}/data_${dataset}.txt
  rm ${output_directory}/${dataset}.*

#CHECK EXECUTION
grep -q "Command terminated by signal" ${output_directory}/data_${dataset}.txt
if [ $? -eq 0 ]; then
  echo "    Command terminated by signal"
  CPU=0
  CLOCK=0
  RAM=0
  RUNS=0
else
echo "    Done"
  CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
  CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
  RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
  RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ") 
fi
  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_original.txt
  cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_ORIG_${dataset}.txt
  rm ${output_directory}/data_*
  
  echo "  Build rloBWT"

  (/usr/bin/time -v ./BCR_rloBWT ${dataset_directory}/${dataset} ${output_directory}/${dataset}.out) &> ${output_directory}/data_${dataset}.txt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt >> ${output_directory}/data_${dataset}.txt
  rm ${output_directory}/${dataset}.*

 #CHECK EXECUTION
grep -q "Command terminated by signal" ${output_directory}/data_${dataset}.txt
if [ $? -eq 0 ]; then
  echo "  Command terminated by signal"
  CPU=0
  CLOCK=0
  RAM=0 
  RUNS=0
else
  echo "    Done"
  CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
  CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
  RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
  RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ") 
fi
  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_RLO.txt

  cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_RLO_${dataset}.txt
  rm ${output_directory}/data_*
  
   echo "  Build altBWT"
   
  (/usr/bin/time -v ./BCR_altBWT ${dataset_directory}/${dataset} ${output_directory}/${dataset}.out) &> ${output_directory}/data_${dataset}.txt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt >> ${output_directory}/data_${dataset}.txt
  rm ${output_directory}/${dataset}.*

  #CHECK EXECUTION

grep -q "Command terminated by signal" ${output_directory}/data_${dataset}.txt
if [ $? -eq 0 ]; then
echo "    Command terminated by signal"
  CPU=0
  CLOCK=0
  RAM=0 
  RUNS=0
else
  echo "    Done"
  CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
  CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
  RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
  RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ") 
fi
  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_inverse.txt
  cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_INV_${dataset}.txt
  rm ${output_directory}/data_*

 echo "  Build plusBWT"

  (/usr/bin/time -v ./BCR_plusBWT ${dataset_directory}/${dataset} $output_directory/${dataset}.out) &>  $output_directory/data_${dataset}.txt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt >> ${output_directory}/data_${dataset}.txt

 #CHECK EXECUTION
grep -q "Command terminated by signal" ${output_directory}/data_${dataset}.txt
if [ $? -eq 0 ]; then
echo "    Command terminated by signal"
  CPU=0
  CLOCK=0
  RAM=0 
  RUNS=0
else
  echo "    Done"
  CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
  CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
  RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
  RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ") 
fi
  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_plus.txt
  cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_PLUS_${dataset}.txt
  rm ${output_directory}/data_*


echo "  Build randBWT"

  (/usr/bin/time -v ./BCR_randBWT ${dataset_directory}/${dataset} $output_directory/${dataset}.out) &>  $output_directory/data_${dataset}.txt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt >> ${output_directory}/data_${dataset}.txt

 #CHECK EXECUTION
grep -q "Command terminated by signal" ${output_directory}/data_${dataset}.txt
if [ $? -eq 0 ]; then
echo "    Command terminated by signal"
  CPU=0
  CLOCK=0
  RAM=0 
  RUNS=0
else
  echo "    Done"
  CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
  CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
  RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
  RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ") 
fi
  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_random.txt
  cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_RANDOM_${dataset}.txt
  rm ${output_directory}/data_*


 echo "  Build sapBWT by BEETL-BCRext"
  
  (/usr/bin/time -v ${tools_directory}/BEETL/install/bin/beetl bwt --algorithm=ext --sap-ordering --output-format ASCII --intermediate-format ASCII --input ${dataset_directory}/${dataset} --output ${output_directory}/${dataset}.out) &> ${output_directory}/data_${dataset}.txt
  cat ${output_directory}/${dataset}.out-B00 ${output_directory}/${dataset}.out-B01 ${output_directory}/${dataset}.out-B02 ${output_directory}/${dataset}.out-B03 ${output_directory}/${dataset}.out-B04 ${output_directory}/${dataset}.out-B05 >  ${output_directory}/${dataset}.out.ebwt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt >> ${output_directory}/data_${dataset}.txt
  rm ${output_directory}/${dataset}.*

  #CHECK EXECUTION
  grep -q -E "Command exited|Command terminated by signal"  ${output_directory}/data_${dataset}.txt
  if [ $? -eq 0 ]; then
    echo "    Command terminated by signal"
    CPU=0
    CLOCK=0
    RAM=0 
    RUNS=0
  else
    echo "    Done"
    CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
    CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
    RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
    RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ") 
  fi
  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_BEETL.txt
  cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_BEETL_${dataset}.txt
  rm ${output_directory}/data_*


  echo "  Build (reduced) SAP-ARRAY"
  (/usr/bin/time -v ./BCR_sapArray ${dataset_directory}/${dataset} ${output_directory}/${dataset}.out) &> ${output_directory}/data_${dataset}.txt

cp ${output_directory}/data_${dataset}.txt ${output_dirStdERROUT}/data_SAP-ARRAY_${dataset}.txt

#CHECK EXECUTION
  grep -q -E "Command exited|Command terminated by signal"  ${output_directory}/data_${dataset}.txt
  if [ $? -eq 0 ]; then
    echo "    Command terminated by signal"
    CPU=0
    CLOCK=0
    RAM=0 
    RUNS=0
    sap_counter=0
    sap_counter_two=0
  else
    echo "    Done"
    CPU=$(grep "CPU" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
    CLOCK=$(grep "Elapsed" ${output_directory}/data_${dataset}.txt | cut -f 8 -d " ")
    RAM=$(grep "Maximum" ${output_directory}/data_${dataset}.txt | cut -f 6 -d " ") 
    RUNS=$(grep "runs" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ")
    sap_counter=$(grep "total sap interval:" ${output_directory}/data_${dataset}.txt | cut -f 4 -d " ")
    sap_counter_two=$(grep "total sap interval of type two:" ${output_directory}/data_${dataset}.txt | cut -f 7 -d " ")
  fi

  echo "  Compute Statistics SAP-intervals"
  (/usr/bin/time -v ./stastisticsSAPintervals ${output_directory}/${dataset}.out) &> ${output_directory}/sapTypeTwo_${dataset}.txt
  #CHECK EXECUTION
  grep -q -E "Command exited|Command terminated by signal"  ${output_directory}/sapTypeTwo_${dataset}.txt
  if [ $? -eq 0 ]; then
    echo "    Command terminated by signal"
    #sap_counter_two=0
    TotalSapLength=0
    totalDiffChar=0
    totalSapRuns=0
  else
    echo "    Done"
    #sap_counter_two=$(grep "total sap interval of type two" ${output_directory}/sapTypeTwo_${dataset}.txt | cut -f 7 -d " ")
    totalSapLength=$(grep "length" ${output_directory}/sapTypeTwo_${dataset}.txt | cut -f 9 -d " ")
    totalDiffChar=$(grep "distinctive" ${output_directory}/sapTypeTwo_${dataset}.txt | cut -f 10 -d " ")
    totalSapRuns=$(grep "runs" ${output_directory}/sapTypeTwo_${dataset}.txt | cut -f 9 -d " ")
  fi

  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM}" >> ${output_directory}/table_SAP-ARRAY.txt
  echo "${dataset},${sap_counter},${sap_counter_two},${totalSapLength},${totalDiffChar},${totalSapRuns}" >> ${output_directory}/table_temp.txt

  echo "  Build optBWT by permute (see DCC paper)"

  /usr/bin/time -v ${optimal_directory}/optimalBWT/permute ${output_directory}/${dataset}.out.ebwt ${output_directory}/${dataset}.out.bwt.red_sap 10 &> ${output_directory}/data_optimal_${dataset}.txt
  ${tools_directory}/number-runs ${output_directory}/${dataset}.out.ebwt.optbwt >> ${output_directory}/data_optimal_${dataset}.txt


  cp ${output_directory}/data_optimal_${dataset}.txt ${output_dirStdERROUT}/data_OPT_${dataset}.txt

#CHECK EXECUTION
  grep -q -E "Command exited|Command terminated by signal"  ${output_directory}/data_optimal_${dataset}.txt
  if [ $? -eq 0 ]; then
    echo "    Command terminated by signal"
    CPU=0
    CLOCK=0
    RAM=0 
    RUNS=0
  else
    echo "    Done"
      CPU=$(grep "CPU" ${output_directory}/data_optimal_${dataset}.txt | cut -f 7 -d " ")
      CLOCK=$(grep "Elapsed" ${output_directory}/data_optimal_${dataset}.txt | cut -f 8 -d " ")
      RAM=$(grep "Maximum" ${output_directory}/data_optimal_${dataset}.txt | cut -f 6 -d " ") 
       RUNS=$(grep "runs" ${output_directory}/data_optimal_${dataset}.txt | cut -f 4 -d " ") 
  fi

  #STORE INFORMATION
  echo "${dataset},${CPU},${CLOCK},${RAM},${RUNS}" >> ${output_directory}/table_optimal.txt


  
  rm ${output_directory}/data_*
  rm ${output_directory}/${dataset}.*
  rm ${output_directory}/sapTypeTwo*

done

echo -e "\n" >> ${output_directory}/table_original.txt
echo -e "\n" >> ${output_directory}/table_RLO.txt
echo -e "\n" >> ${output_directory}/table_inverse.txt
echo -e "\n" >> ${output_directory}/table_plus.txt
echo -e "\n" >> ${output_directory}/table_random.txt
echo -e "\n" >> ${output_directory}/table_SAP-ARRAY.txt
echo -e "\n" >> ${output_directory}/table_optimal.txt
echo -e "\n" >> ${output_directory}/table_BEETL.txt


cat ${output_directory}/table_original.txt ${output_directory}/table_RLO.txt ${output_directory}/table_inverse.txt ${output_directory}/table_plus.txt ${output_directory}/table_random.txt ${output_directory}/table_SAP-ARRAY.txt ${output_directory}/table_optimal.txt ${output_directory}/table_BEETL.txt ${output_directory}/table_temp.txt > ${output_directory}/table.txt
rm ${output_directory}/table_*
